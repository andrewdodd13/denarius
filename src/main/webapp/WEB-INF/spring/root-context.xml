<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- MVC Controllers -->
	<context:component-scan base-package="org.ad13.denarius.controller" />
	<context:component-scan base-package="org.ad13.denarius.service" />
	<context:property-placeholder location="/WEB-INF/system.properties" />
	
	<jpa:repositories base-package="org.ad13.denarius.repository" />	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- Message Converters for marshalling responses -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	<bean id="jsonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="prefixJson" value="false" />
		<property name="supportedMediaTypes" value="application/json" />
	</bean>

	<!-- Data Source -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<property name="maxActive" value="8" />
	</bean>

	<!-- Hibernate Necessities -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="denariusPersistenceUnit" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="database" value="MYSQL" />
				<property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
				<property name="showSql" value="false" />
				<property name="generateDdl" value="true" />
			</bean>
		</property>
		<property name="packagesToScan" value="org.ad13.denarius.model" />
	</bean>

	<!-- JPA Beans -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!-- Repositories -->
	<bean id="accountRepository" class="org.ad13.denarius.repository.AccountRepositoryImpl" />
	
	<!-- Security Information -->
	<sec:http pattern="/resources" security="none" />
	<sec:http auto-config="true" use-expressions="true">
		<sec:intercept-url pattern="/login" access="permitAll" />
		<sec:intercept-url pattern="/resources/**" access="permitAll" />
		<sec:intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')" />
		<sec:intercept-url pattern="/**" access="hasRole('ROLE_USER')" />

		<sec:form-login login-page="/login"
			authentication-failure-url="/login/failure" default-target-url="/" />

		<sec:access-denied-handler error-page="/login/denied" />

		<sec:logout invalidate-session="true" logout-success-url="/login/logout-success"
			logout-url="/login/logout" />
	</sec:http>

	<bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<constructor-arg value="256" />
		<property name="iterations" value="32" />
	</bean>

	<sec:authentication-manager>
		<sec:authentication-provider
			user-service-ref="denariusUserDetailsService">
			<sec:password-encoder ref="passwordEncoder">
				<sec:salt-source user-property="username" />
			</sec:password-encoder>
		</sec:authentication-provider>
	</sec:authentication-manager>
	
	<!-- Groovy Console -->
	<bean id="groovyConsole" class="groovy.ui.Console" init-method="run">
		<constructor-arg index="0" type="groovy.lang.Binding">
			<bean class="groovy.lang.Binding">
				<constructor-arg index="0" type="java.util.Map">
					<map>
						<entry key="context">
							<bean class="org.ad13.util.CurrentContextBean" />
						</entry>
					</map>
				</constructor-arg>
			</bean>
		</constructor-arg>
	</bean> 
</beans>
